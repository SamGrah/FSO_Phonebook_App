{"version":3,"sources":["services/contactService.js","containers/AddNewEntry.js","containers/ListNumbers.js","containers/EntryTextFilter.js","containers/DisplayBannerMsg.js","App.js","index.js"],"names":["baseURL","contactService","getAll","a","axios","get","res","data","update","person","post","remove","id","delete","modify","put","AddNewEntry","phonebook","setPhonebook","setMsgInfo","useState","newName","setNewName","newNumber","setNewNumber","resetFields","addEntry","event","preventDefault","newEntry","name","number","existingEntry","find","existMsg","alert","updateMsg","window","confirm","updatedEntry","map","entry","className","message","filter","createdEntry","concat","onSubmit","value","onChange","target","type","ListNumbers","onClick","contact","listOfPersons","EntryTextFilter","setFilterText","filterText","toLowerCase","DisplayBannerMsg","msgInfo","setTimeout","App","persons","setPersons","useEffect","initalPersons","visibleEntries","length","includes","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f1a64b1.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = 'api/persons'\n\nconst getAll = async () => {\n  const res = await axios.get(baseURL)\n  return res.data\n}\n\nconst update = async (person) => {\n  const res = await axios.post(baseURL, person)\n  return res.data\n}\n\nconst remove = async (id) => {\n  return await axios.delete(`${baseURL}/${id}`)\n}\n\nconst modify = async (person) => {\n  const res = await axios.put(`${baseURL}/${person.id}`, person)\n  return res.data\n}\n\nconst contactService = {\n  getAll,\n  update,\n  remove,\n  modify\n}\nexport default contactService\n\n","import React, {useState} from 'react' \nimport contactService from '../services/contactService'\n\nconst AddNewEntry = ({phonebook, setPhonebook, setMsgInfo }) => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n  const handleNewName = (event) => setNewName(event.target.value)\n  const handleNewNumber = (event) => setNewNumber(event.target.value)\n  const resetFields = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  \n  const addEntry = async (event) => {\n    event.preventDefault()\n    let newEntry = {\n      name: newName,\n      number: newNumber\n    }\n\n    let existingEntry = phonebook.find(person => person.name === newName)\n    if (existingEntry) {\n      const existMsg = `${newName} is already added to phonebook`\n      if (newEntry.number === existingEntry.number) alert(existMsg)\n      else {\n        const updateMsg = `${existMsg}, replace the older number with a new one?`\n        const confirmUpdate = window.confirm(updateMsg)\n        if (confirmUpdate) {\n          newEntry = {...newEntry, id: existingEntry.id}\n          try {\n            const updatedEntry = await contactService.modify(newEntry)\n            setPhonebook(phonebook.map(entry => {\n              return updatedEntry.id === entry.id ? updatedEntry : entry\n            }))\n            setMsgInfo({ className: 'success', \n                         message: `Updated ${updatedEntry.name}`})\n          } catch {\n            setPhonebook(phonebook.filter(entry => newEntry.id !== entry.id))\n            setMsgInfo({ className: 'error',\n                         message: `Information of ${newEntry.name} ` +\n                                  \"has been removed from the server\"})         \n          }\n        }\n      }  \n      resetFields('')\n      return\n    }\n\n    \n\n    const createdEntry = await contactService.update(newEntry)\n    setPhonebook(phonebook.concat(createdEntry))\n    setMsgInfo({ className: 'success', message: `Added ${createdEntry.name}`})\n    resetFields('')\n  }\n  return (\n    <>\n      <h1>add a new</h1>\n      <form onSubmit={addEntry}>\n        <div>\n          name: <input value={newName}\n                       onChange={handleNewName}/>\n        </div>\n        <div>\n          number: <input value={newNumber} \n                         onChange={handleNewNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\" >\n            add\n          </button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default AddNewEntry","import React from 'react'\nimport contactService from '../services/contactService'\n\nconst ListNumbers = ({ phonebook, setPhonebook, setMsgInfo }) => {\n\n  const handleDelete = (contact) => async () => {\n    const confirmation = window.confirm(`Delete ${contact.name}?`)\n    if (!confirmation) return\n    try {\n      await contactService.remove(contact.id)\n      setMsgInfo({ className: \"success\", \n                   message: `Deleted ${contact.name}`})\n    } catch { \n      setMsgInfo({ className: \"inform\" ,\n                   message: `Information of ${contact.name} ` +\n                            \"isn't present on the server\"})\n    }  \n    const listOfPersons = await contactService.getAll()\n    setPhonebook(listOfPersons)\n  }\n\n  return (\n    <>\n      <h2>Numbers</h2>\n      <div>\n        { phonebook.map(entry => {\n            return (\n              <div key={entry.name}>\n                {entry.name} {entry.number}\n                <button onClick={handleDelete(entry)}>delete</button>\n              </div>\n            )\n          })\n        }\n      </div>\n    </>\n  )\n}\n\nexport default ListNumbers","import React from 'react'\n\nconst EntryTextFilter = ({ setFilterText }) => {\n  const handleFilterChange = (event) => {\n    const filterText = event.target.value.toLowerCase()\n    setFilterText(filterText)\n  }\n\n  return (\n    <div>filter shown with <input onChange={handleFilterChange}/></div>\n  )\n}\n\nexport default EntryTextFilter","import React from 'react'\n\nconst DisplayBannerMsg = ({ msgInfo, setMsgInfo}) => {\n  if (!msgInfo) return <></>\n\n  setTimeout(() => setMsgInfo(), 3500)\n\n  return (\n    <div className={\"baseClass \" + msgInfo.className}>\n      {msgInfo.message}\n    </div>\n  )\n}\n\nexport default DisplayBannerMsg","import \"./App.css\"\nimport React, { useEffect, useState } from 'react'\nimport AddNewEntry from './containers/AddNewEntry'\nimport ListNumbers from './containers/ListNumbers'\nimport EntryTextFilter from './containers/EntryTextFilter'\nimport DisplayBannerMsg from './containers/DisplayBannerMsg'\nimport contactService from './services/contactService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ msgInfo, setMsgInfo ] = useState()\n\n  const fetchInitalPersonsList = () => {\n    ( async() => {\n        const initalPersons = await contactService.getAll()\n        setPersons(initalPersons)\n    })()\n  }\n  useEffect(fetchInitalPersonsList, [])\n\n  const [filterText, setFilterText] = useState('')\n  const visibleEntries = filterText.length \n    ? persons.filter(entry => entry.name.toLowerCase().includes(filterText))\n    : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <DisplayBannerMsg msgInfo={msgInfo} setMsgInfo={setMsgInfo} />\n      <EntryTextFilter setFilterText={setFilterText}/>\n      <AddNewEntry phonebook={persons} \n                   setPhonebook={setPersons} \n                   setMsgInfo={setMsgInfo}/>\n      <ListNumbers phonebook={visibleEntries} \n                   setPhonebook={setPersons} \n                   setMsgInfo={setMsgInfo}/>\n    </div>\n  )\n}\n\nexport default App","import reactDom from 'react-dom'\nimport App from './App'\n\nreactDom.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}